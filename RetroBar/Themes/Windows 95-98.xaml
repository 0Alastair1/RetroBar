<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:system="clr-namespace:System;assembly=mscorlib">
    <system:Boolean x:Key="InvertSystemNotifyIcons">True</system:Boolean>
    
    <SolidColorBrush x:Key="ButtonHighlight" Color="#ffffff" />
    <SolidColorBrush x:Key="ButtonInnerHighlight" Color="#ffffff" />
    <SolidColorBrush x:Key="ButtonLight" Color="#dfdfdf" />
    <SolidColorBrush x:Key="ButtonFace" Color="#c0c0c0" />
    <SolidColorBrush x:Key="ButtonShadow" Color="#808080" />
    <SolidColorBrush x:Key="ButtonDarkShadow" Color="#000000" />
    <SolidColorBrush x:Key="ButtonFlashingFace" Color="#000080" />

    <SolidColorBrush x:Key="ButtonForeground" Color="#000000" />
    <SolidColorBrush x:Key="ButtonFlashingForeground" Color="#FFFFFF" />
    <SolidColorBrush x:Key="ClockForeground" Color="#000000" />
    
    <SolidColorBrush x:Key="ToolTipBackground" Color="#FFFFE1" />
    <SolidColorBrush x:Key="ToolTipForeground" Color="#000000" />

    <ToolTip x:Key="StartButtonTip" Content="{DynamicResource start_button_tip_98}" />
    <ToolTip x:Key="ShowDesktopButtonTip" Content="{DynamicResource show_desktop_tip_95}" />
    <Style TargetType="MenuItem"
           x:Key="ShowDesktopItem"
           BasedOn="{StaticResource ShowDesktopItem}">
        <Setter Property="Header"
                Value="{DynamicResource show_desktop_95}" />
    </Style>

    <Style TargetType="ToggleButton"
           x:Key="StartButton"
           BasedOn="{StaticResource StartButton}">
        <Setter Property="FocusVisualStyle"
                Value="{StaticResource ClassicFocusVisual}" />
    </Style>

    <FontFamily x:Key="GlobalFontFamily">Microsoft Sans Serif</FontFamily>

    <Style TargetType="ToggleButton"
           x:Key="ShowDesktopButton"
           BasedOn="{StaticResource StartButton}">
        <Setter Property="Margin"
                Value="-2,0,0,0" />
        <Setter Property="HorizontalAlignment"
                Value="Center" />
        <Style.Triggers>
            <Trigger Property="IsChecked"
                     Value="True">
                <Setter Property="Background"
                        Value="{DynamicResource CheckeredBackgroundAlt}" />
            </Trigger>
            <DataTrigger Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                         Value="Horizontal">
                <DataTrigger.Setters>
                    <Setter Property="BorderThickness"
                            Value="0,0,0,1" />
                </DataTrigger.Setters>
            </DataTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>