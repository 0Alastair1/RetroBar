<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:system="clr-namespace:System;assembly=mscorlib">

    <system:Double x:Key="TaskbarHeight">30</system:Double>
    <Thickness x:Key="TaskButtonMargin" />

    <LinearGradientBrush x:Key="TaskbarBackground"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <GradientStop Color="#252525"
                      Offset="0.0" />
        <GradientStop Color="#858585"
                      Offset="0.02" />
        <GradientStop Color="#606060"
                      Offset="0.5" />              
        <GradientStop Color="#5e5e5e"
                      Offset="0.50" />              
        <GradientStop Color="#3C3C3C"
                      Offset="0.50" />
        <GradientStop Color="#2e2e2e"
                      Offset="0.90" />
        <GradientStop Color="#1b1b1b"
                      Offset="0.95" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="TaskbarVerticalBackground"
                         StartPoint="0,0"
                         EndPoint="1,0">
        <GradientStop Color="#252525"
                      Offset="0.0" />
        <GradientStop Color="#858585"
                      Offset="0.02" />
        <GradientStop Color="#6f6f6f"
                      Offset="0.03" />
        <GradientStop Color="#6c6c6c"
                      Offset="0.05" />
        <GradientStop Color="#6c6c6c"
                      Offset="0.08" />
        <GradientStop Color="#5b5b5b"
                      Offset="0.16" />
        <GradientStop Color="#383838"
                      Offset="0.16" />
        <GradientStop Color="#383838"
                      Offset="0.87" />
        <GradientStop Color="#292929"
                      Offset="0.98" />
        <GradientStop Color="#2E2E2E"
                      Offset="1.0" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="TaskbarBorder" Color="#252525" />

    <SolidColorBrush x:Key="TrayTopBottomBorder" Color="#0D0D0D" />
    <SolidColorBrush x:Key="TrayLeftBorder1" Color="#000000" />
    <SolidColorBrush x:Key="TrayLeftBorder2" Color="#00000000" />
    <SolidColorBrush x:Key="TrayLeftBorder3" Color="#00000000" />
    <SolidColorBrush x:Key="TrayLeftBorder4" Color="#00000000" />
    <LinearGradientBrush x:Key="TrayBackground"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <GradientStop Color="#5f5f5f"
                      Offset="0.05" />
        <GradientStop Color="#363636"
                      Offset="0.51" />
        <GradientStop Color="#3f3f3f"
                      Offset="0.51" />
        <GradientStop Color="#1d1d1d"
                      Offset="0.51" />
        <GradientStop Color="#101010"
                      Offset="1.0" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="TrayVerticalBackground"
                         StartPoint="0,0"
                         EndPoint="1,0">
        <GradientStop Color="#5f5f5f"
                      Offset="0.0" />
        <GradientStop Color="#484848"
                      Offset="0.05" />
        <GradientStop Color="#3f3f3f"
                      Offset="0.15" />
        <GradientStop Color="#1d1d1d"
                      Offset="0.15" />
        <GradientStop Color="#1d1d1d"
                      Offset="0.87" />
        <GradientStop Color="#101010"
                      Offset="1.0" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="TrayToggleBorder"
                         StartPoint="0,0"
                         EndPoint="1,1">
        <GradientStop Color="#282828"
                      Offset="0.0" />
        <GradientStop Color="#595959"
                      Offset="0.4" />
        <GradientStop Color="#373737"
                      Offset="0.5" />
        <GradientStop Color="#373737"
                      Offset="0.6" />
        <GradientStop Color="#282828"
                      Offset="1.0" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="TrayToggleBackground"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <GradientStop Color="#646464"
                      Offset="0.0" />
        <GradientStop Color="#4d4d4d"
                      Offset="0.3" />
        <GradientStop Color="#1d1d1d"
                      Offset="0.45" />
        <GradientStop Color="#373737"
                      Offset="0.6" />
        <GradientStop Color="#4e4e4e"
                      Offset="0.82" />  
        <GradientStop Color="#4e4e3e"
                      Offset="0.85" />       
        <GradientStop Color="#646464"
                      Offset="0.85" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="TrayToggleHoverBackground"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <GradientStop Color="#646464"
                      Offset="0.0" />
        <GradientStop Color="#3a3a3a"
                      Offset="0.3" />
        <GradientStop Color="#020202"
                      Offset="0.45" />
        <GradientStop Color="#020202"
                      Offset="0.6" />
        <GradientStop Color="#4e4e4e"
                      Offset="0.82" />  
        <GradientStop Color="#373737"
                      Offset="0.85" />       
        <GradientStop Color="#646464"
                      Offset="0.85" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="TrayTogglePressedBackground"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <GradientStop Color="#3c3c3c"
                      Offset="0.0" />
        <GradientStop Color="#2b2b2b"
                      Offset="0.25" />
        <GradientStop Color="#1b1b1b"
                      Offset="0.45" />
        <GradientStop Color="#020202"
                      Offset="0.6" />
        <GradientStop Color="#4e4e4e"
                      Offset="0.82" />  
        <GradientStop Color="#373737"
                      Offset="0.85" />
        <GradientStop Color="#646464"
                      Offset="0.85" />   
        <GradientStop Color="#2f2f2f"
                      Offset="1.0" />
    </LinearGradientBrush>
    <DropShadowEffect x:Key="TrayToggleArrowOuterShadow"
                      Color="Transparent"
                      Opacity="0"
                      BlurRadius="0"
                      ShadowDepth="0" />
    <DropShadowEffect x:Key="TrayToggleArrowShadow"
                      Color="#7d7d7d"
                      BlurRadius="4"
                      ShadowDepth="0" />
    <SolidColorBrush x:Key="TrayToggleArrowPressed" Color="#8d8d8d" />
    <Thickness x:Key="TrayToggleArrowPadding" Left="5" Top="4" Right="6" Bottom="4" />

    <SolidColorBrush x:Key="TaskButtonTopBorder" Color="#5f5f5f" />
    <SolidColorBrush x:Key="TaskButtonLeftBorder" Color="#444444" />
    <SolidColorBrush x:Key="TaskButtonRightBorder" Color="#444444" />
    <SolidColorBrush x:Key="TaskButtonBottomBorder" Color="#0b0b0b" />
    <SolidColorBrush x:Key="TaskButtonInnerLeftBorder" Color="#666666" />
    <SolidColorBrush x:Key="TaskButtonInnerRightBorder" Color="#666666" />
    <SolidColorBrush x:Key="TaskButtonInnerBottomBorder" Color="#252525" />
    <LinearGradientBrush x:Key="TaskButtonBackground"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <GradientStop Color="#747474"
                      Offset="0.0" />
        <GradientStop Color="#5c5c5c"
                      Offset="0.45" />
        <GradientStop Color="#343434"
                      Offset="0.45" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="TaskButtonBackgroundHighlight"
                         StartPoint="0,0"
                         EndPoint="0.03,1">
        <GradientStop Color="#00000000"
                      Offset="0.0" />
        <GradientStop Color="#00000000"
                      Offset="0.3" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="TaskButtonTopBorderHover" Color="#4a4a4a" />
    <SolidColorBrush x:Key="TaskButtonLeftBorderHover" Color="#2f2f2f" />
    <SolidColorBrush x:Key="TaskButtonRightBorderHover" Color="#2f2f2f" />
    <SolidColorBrush x:Key="TaskButtonBottomBorderHover" Color="#0c0c0c" />
    <SolidColorBrush x:Key="TaskButtonInnerLeftBorderHover" Color="#545454" />
    <SolidColorBrush x:Key="TaskButtonInnerRightBorderHover" Color="#545454" />
    <SolidColorBrush x:Key="TaskButtonInnerBottomBorderHover" Color="#161616" />
    <LinearGradientBrush x:Key="TaskButtonBackgroundHover"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <GradientStop Color="#666666"
                      Offset="0.0" />
        <GradientStop Color="#515151"
                      Offset="0.05" />
        <GradientStop Color="#4d4d4d"
                      Offset="0.45" />
        <GradientStop Color="#3f3f3f"
                      Offset="0.45" />
        <GradientStop Color="#1a1a1a"
                      Offset="0.75" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="TaskButtonBackgroundHighlightHover"
                         StartPoint="0,0"
                         EndPoint="0.03,1">
        <GradientStop Color="#00000000"
                      Offset="0.0" />
        <GradientStop Color="#00000000"
                      Offset="0.3" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="TaskButtonTopBorderPressed" Color="#030303" />
    <SolidColorBrush x:Key="TaskButtonLeftBorderPressed" Color="#070707" />
    <SolidColorBrush x:Key="TaskButtonRightBorderPressed" Color="#070707" />
    <SolidColorBrush x:Key="TaskButtonBottomBorderPressed" Color="#717171" />
    <SolidColorBrush x:Key="TaskButtonInnerLeftBorderPressed" Color="#393939" />
    <SolidColorBrush x:Key="TaskButtonInnerRightBorderPressed" Color="#393939" />
    <SolidColorBrush x:Key="TaskButtonInnerBottomBorderPressed" Color="#1d1d1d" />
    
    <LinearGradientBrush x:Key="TaskButtonBackgroundPressed"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <GradientStop Color="#282828"
                      Offset="0.0" />
        <GradientStop Color="#3c3c3c"
                      Offset="0.1" />
        <GradientStop Color="#262626"
                      Offset="0.45" />        
        <GradientStop Color="#121212"
                      Offset="0.45" />
        <GradientStop Color="#1f1f1f"
                      Offset="1.0" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="TaskButtonBackgroundHighlightPressed"
                         StartPoint="0,0"
                         EndPoint="0.03,1">
        <GradientStop Color="Transparent"
                      Offset="0.0" />
        <GradientStop Color="Transparent"
                      Offset="0.3" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="TaskButtonTopBorderPressedHover" Color="#050505" />
    <SolidColorBrush x:Key="TaskButtonInnerLeftBorderPressedHover" Color="#404040" />
    <SolidColorBrush x:Key="TaskButtonInnerRightBorderPressedHover" Color="#404040" />
    <SolidColorBrush x:Key="TaskButtonInnerBottomBorderPressedHover" Color="#9d9d9d" />
    <LinearGradientBrush x:Key="TaskButtonBackgroundPressedHover"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <GradientStop Color="#6b6b6b"
                      Offset="0.0" />
        <GradientStop Color="#646464"
                      Offset="0.1" />
        <GradientStop Color="#565656"
                      Offset="0.45" />
        <GradientStop Color="#444444"
                      Offset="0.45" />
        <GradientStop Color="#343434"
                      Offset="1.0" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="TaskButtonTopBorderFlashing" Color="#5e4c36" />
    <SolidColorBrush x:Key="TaskButtonLeftBorderFlashing" Color="#524844" />
    <SolidColorBrush x:Key="TaskButtonRightBorderFlashing" Color="#524844" />
    <SolidColorBrush x:Key="TaskButtonBottomBorderFlashing" Color="#a35500" />
    <SolidColorBrush x:Key="TaskButtonInnerLeftBorderFlashing" Color="#ebbb74" />
    <SolidColorBrush x:Key="TaskButtonBottomRightBorderFlashing" Color="Transparent" />
    <LinearGradientBrush x:Key="TaskButtonBackgroundFlashing"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <GradientStop Color="#f78538"
                      Offset="0.0" />
        <GradientStop Color="#fddc54"
                      Offset="0.05" />
        <GradientStop Color="#ff7533"
                      Offset="0.5" />
        <GradientStop Color="#d94c21"
                      Offset="0.5" />
        <GradientStop Color="#c5441e"
                      Offset="1.0" />
    </LinearGradientBrush>

    <CornerRadius x:Key="TaskListScrollUpCornerRadius">0,0,2,2</CornerRadius>
    <CornerRadius x:Key="TaskListScrollDownCornerRadius">2,2,0,0</CornerRadius>
    <CornerRadius x:Key="TaskListScrollLeftCornerRadius">0,2,2,0</CornerRadius>
    <CornerRadius x:Key="TaskListScrollRightCornerRadius">2,0,0,2</CornerRadius>

    <SolidColorBrush x:Key="TaskListScrollButtonTopBorder" Color="#26000000" />
    <SolidColorBrush x:Key="TaskListScrollButtonLeftBorder" Color="#26ffffff" />
    <SolidColorBrush x:Key="TaskListScrollButtonRightBorder" Color="#26ffffff" />
    <SolidColorBrush x:Key="TaskListScrollButtonBottomBorder" Color="#26ffffff" />
    <SolidColorBrush x:Key="TaskListScrollButtonInnerTopBorder" Color="Transparent" />
    <SolidColorBrush x:Key="TaskListScrollButtonInnerLeftBorder" Color="#33000000" />
    <SolidColorBrush x:Key="TaskListScrollButtonInnerRightBorder" Color="#33000000" />
    <SolidColorBrush x:Key="TaskListScrollButtonInnerBottomBorder" Color="#33000000" />
    <SolidColorBrush x:Key="TaskListScrollButtonOuterLeftBorder" Color="#1f000000" />
    <SolidColorBrush x:Key="TaskListScrollButtonOuterRightBorder" Color="#55000000" />
    <SolidColorBrush x:Key="TaskListScrollButtonOuterBottomBorder" Color="#44000000" />
    <LinearGradientBrush x:Key="TaskListScrollButtonBackground"
                         StartPoint="0,0"
                         EndPoint="1,1">
        <GradientStop Color="#26000000"
                      Offset="0.0" />
        <GradientStop Color="#33000000"
                      Offset="1.0" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="TaskListScrollButtonBackgroundHover"
                         StartPoint="0,0"
                         EndPoint="1,1">
        <GradientStop Color="#5576FC"
                      Offset="0.0" />
        <GradientStop Color="#4A58E7"
                      Offset="1.0" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="TaskListScrollButtonBackgroundPressed"
                         StartPoint="0,0"
                         EndPoint="1,1">
        <GradientStop Color="#272784"
                      Offset="0.0" />
        <GradientStop Color="#363CCA"
                      Offset="1.0" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="TaskListScrollDownButtonInnerTopBorder" Color="#33000000" />
    <SolidColorBrush x:Key="TaskListScrollDownButtonOuterTopBorder" Color="#44000000" />
    <SolidColorBrush x:Key="TaskListScrollDownButtonTopBorder" Color="#26ffffff" />
    <SolidColorBrush x:Key="TaskListScrollDownButtonInnerBottomBorder" Color="Transparent" />
    <SolidColorBrush x:Key="TaskListScrollDownButtonBottomBorder" Color="Transparent" />
    <SolidColorBrush x:Key="TaskListScrollArrow" Color="#bedcff" />

    <DropShadowEffect x:Key="StartLabelShadow"
                      Color="#454c10"
                      Direction="315"
                      ShadowDepth="1"
                      BlurRadius="4"
                      Opacity="1" />

    <SolidColorBrush x:Key="ItemButtonForeground" Color="#ffffff" />
    <SolidColorBrush x:Key="ButtonForeground" Color="#ffffff" />
    <SolidColorBrush x:Key="ButtonActiveForeground" Color="#ffffff" />
    <SolidColorBrush x:Key="ButtonPressedForeground" Color="#ffffff" />
    <SolidColorBrush x:Key="ButtonFlashingForeground" Color="#ffffff" />
    <SolidColorBrush x:Key="ClockForeground" Color="#ffffff" />

    <SolidColorBrush x:Key="ToolTipBackground" Color="#FFFFE1" />
    <SolidColorBrush x:Key="ToolTipForeground" Color="#000000" />

    <SolidColorBrush x:Key="BalloonCloseButtonInactiveBackground" Color="#FFFFF5" />
    <SolidColorBrush x:Key="BalloonCloseButtonInactiveBorder" Color="#C7BEA6" />
    <SolidColorBrush x:Key="BalloonCloseButtonInactiveForeground" Color="#AA9C87" />
    <SolidColorBrush x:Key="BalloonCloseButtonInactiveShadow" Color="Transparent" />

    <SolidColorBrush x:Key="BalloonCloseButtonActiveBorder" Color="#FFFFFF" />
    <SolidColorBrush x:Key="BalloonCloseButtonActiveForeground" Color="#FFFFFF" />
    <SolidColorBrush x:Key="BalloonCloseButtonActiveShadowLight" Color="#F3F3D6" />
    <SolidColorBrush x:Key="BalloonCloseButtonActiveShadowDark" Color="#B8B8A2" />

    <SolidColorBrush x:Key="BalloonCloseButtonHoverInnerLight" Color="#11000000" />
    <SolidColorBrush x:Key="BalloonCloseButtonHoverInnerDark" Color="#33000000" />

    <RadialGradientBrush x:Key="BalloonCloseButtonHoverBackground"
                         GradientOrigin="1.0,1.0"
                         RadiusX="0.8"
                         RadiusY="0.8">
        <GradientStop Color="#ffde17"
                      Offset="0.0" />
        <GradientStop Color="#ffad31"
                      Offset="0.5" />
        <GradientStop Color="#ffad31"
                      Offset="0.6" />
        <GradientStop Color="#ffd9a1"
                      Offset="1.0" />
    </RadialGradientBrush>

    <SolidColorBrush x:Key="BalloonCloseButtonPressedInnerLight" Color="#08000000" />
    <SolidColorBrush x:Key="BalloonCloseButtonPressedInnerDark" Color="#33000000" />

    <RadialGradientBrush x:Key="BalloonCloseButtonPressedBackground"
                         GradientOrigin="1.0,1.0"
                         RadiusX="0.8"
                         RadiusY="0.8">
        <GradientStop Color="#d89500"
                      Offset="0.0" />
        <GradientStop Color="#cc7900"
                      Offset="0.5" />
        <GradientStop Color="#cc7900"
                      Offset="0.6" />
        <GradientStop Color="#a96000"
                      Offset="1.0" />
    </RadialGradientBrush>

    <BitmapImage x:Key="StartIconImage"
                 UriSource="../Resources/startxpblue.png" />
    <BitmapImage x:Key="StartButtonImage"
                 UriSource="../Resources/startxpzunebutton.png" />

    <Style TargetType="MenuItem"
           x:Key="TaskManMenuItem">
        <Setter Property="Header"
                Value="{DynamicResource show_taskman}" />
    </Style>

    <FontFamily x:Key="GlobalFontFamily">Tahoma</FontFamily>

    <Style TargetType="ContentControl"
           x:Key="Taskbar"
           BasedOn="{StaticResource Taskbar}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Border BorderThickness="0,1,0,0"
                            BorderBrush="{DynamicResource TaskbarBorder}"
                            Background="{DynamicResource TaskbarBackground}"
                            x:Name="TaskbarBorder">
                        <ContentPresenter Margin="0,-1,0,0"
                                          Name="Content" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                     Value="Vertical">
                            <DataTrigger.Setters>
                                <Setter TargetName="TaskbarBorder"
                                        Property="Background"
                                        Value="{DynamicResource TaskbarVerticalBackground}" />
                                <Setter TargetName="TaskbarBorder"
                                        Property="BorderThickness"
                                        Value="0" />
                                <Setter TargetName="Content"
                                        Property="Margin"
                                        Value="0" />
                            </DataTrigger.Setters>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="GroupBox"
           x:Key="Tray">
        <Setter Property="OverridesDefaultStyle"
                Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GroupBox">
                    <Border BorderThickness="0,1"
                            BorderBrush="{DynamicResource TrayTopBottomBorder}"
                            Name="TrayOuterBorder">
                        <Border BorderThickness="1,0,0,0"
                                BorderBrush="{DynamicResource TrayLeftBorder1}"
                                Background="{DynamicResource TrayBackground}"
                                Name="TrayInnerBorder1">
                            <Border BorderThickness="1,0,0,0"
                                    BorderBrush="{DynamicResource TrayLeftBorder2}"
                                    Name="TrayInnerBorder2">
                                <Border BorderThickness="1,0,0,0"
                                        BorderBrush="{DynamicResource TrayLeftBorder3}"
                                        Name="TrayInnerBorder3">
                                    <Border BorderThickness="1,0,0,0"
                                            BorderBrush="{DynamicResource TrayLeftBorder4}"
                                            Padding="7,0,0,0"
                                            Name="TrayInnerBorder4">
                                        <ContentPresenter />
                                    </Border>
                                </Border>
                            </Border>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                     Value="Vertical">
                            <DataTrigger.Setters>
                                <Setter TargetName="TrayOuterBorder"
                                        Property="BorderThickness"
                                        Value="1,0" />
                                <Setter TargetName="TrayInnerBorder1"
                                        Property="BorderThickness"
                                        Value="0,1,0,0" />
                                <Setter TargetName="TrayInnerBorder2"
                                        Property="BorderThickness"
                                        Value="0,1,0,0" />
                                <Setter TargetName="TrayInnerBorder3"
                                        Property="BorderThickness"
                                        Value="0,1,0,0" />
                                <Setter TargetName="TrayInnerBorder4"
                                        Property="BorderThickness"
                                        Value="0,1,0,0" />
                                <Setter TargetName="TrayInnerBorder4"
                                        Property="Padding"
                                        Value="0,7,0,0" />
                                <Setter TargetName="TrayInnerBorder1"
                                        Property="Background"
                                        Value="{DynamicResource TrayVerticalBackground}" />
                            </DataTrigger.Setters>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button"
           x:Key="TaskButton"
           BasedOn="{StaticResource TaskButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="Transparent"
                            Padding="0,3,0,2"
                            Name="ButtonBorder">
                        <Border BorderThickness="0,1,0,0"
                                BorderBrush="{DynamicResource TaskButtonTopBorder}"
                                Background="Transparent"
                                CornerRadius="2"
                                x:Name="ButtonTopBorder">
                            <Border BorderThickness="1,0,0,0"
                                    BorderBrush="{DynamicResource TaskButtonLeftBorder}"
                                    CornerRadius="2"
                                    x:Name="ButtonLeftBorder">
                                <Border BorderThickness="0,0,0,1"
                                        BorderBrush="{DynamicResource TaskButtonBottomBorder}"
                                        CornerRadius="2"
                                        x:Name="ButtonBottomBorder">
                                    <Border BorderThickness="0,0,1,0"
                                            BorderBrush="{DynamicResource TaskButtonRightBorder}"
                                            CornerRadius="2"
                                            x:Name="ButtonRightBorder">
                                        <Border BorderThickness="0,0,0,1"
                                                BorderBrush="{DynamicResource TaskButtonInnerBottomBorder}"
                                                Background="{DynamicResource TaskButtonBackground}"
                                                CornerRadius="2"
                                                x:Name="ButtonInnerBottomBorder">
                                            <Border BorderThickness="1,0,0,0"
                                                    BorderBrush="{DynamicResource TaskButtonInnerLeftBorder}"
                                                    CornerRadius="2"
                                                    x:Name="ButtonInnerLeftBorder">
                                                <Border BorderThickness="0,0,1,0"
                                                        BorderBrush="{DynamicResource TaskButtonInnerRightBorder}"
                                                        Background="{DynamicResource TaskButtonBackgroundHighlight}"
                                                        CornerRadius="2"
                                                        x:Name="ButtonInnerRightBorder">
                                                    <ContentPresenter Margin="8,3"
                                                                  x:Name="Content" />
                                                </Border>
                                            </Border>
                                        </Border>
                                    </Border>
                                </Border>
                            </Border>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsPressed, RelativeSource={RelativeSource Self}}"
                                           Value="False" />
                                <Condition Binding="{Binding Path=Orientation, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                                           Value="Vertical" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter TargetName="Content"
                                        Property="Margin"
                                        Value="8,6,8,5" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsPressed, RelativeSource={RelativeSource Self}}"
                                           Value="True" />
                                <Condition Binding="{Binding Path=Orientation, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                                           Value="Vertical" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter TargetName="Content"
                                        Property="Margin"
                                        Value="9,7,7,4" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                     Value="Vertical">
                            <DataTrigger.Setters>
                                <Setter TargetName="ButtonBorder"
                                        Property="Padding"
                                        Value="1,0,1,0" />
                            </DataTrigger.Setters>
                        </DataTrigger>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="ButtonTopBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource TaskButtonTopBorderHover}" />
                            <Setter TargetName="ButtonLeftBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource TaskButtonLeftBorderHover}" />
                            <Setter TargetName="ButtonRightBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource TaskButtonRightBorderHover}" />
                            <Setter TargetName="ButtonBottomBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource TaskButtonBottomBorderHover}" />
                            <Setter TargetName="ButtonInnerLeftBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource TaskButtonInnerLeftBorderHover}" />
                            <Setter TargetName="ButtonInnerRightBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource TaskButtonInnerRightBorderHover}" />
                            <Setter TargetName="ButtonInnerBottomBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource TaskButtonInnerBottomBorderHover}" />
                            <Setter TargetName="ButtonInnerBottomBorder"
                                    Property="Background"
                                    Value="{DynamicResource TaskButtonBackgroundHover}" />
                            <Setter TargetName="ButtonInnerRightBorder"
                                    Property="Background"
                                    Value="{DynamicResource TaskButtonBackgroundHighlightHover}" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource ButtonPressedForeground}" />
                            <Setter TargetName="ButtonTopBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource TaskButtonTopBorderPressed}" />
                            <Setter TargetName="ButtonLeftBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource TaskButtonLeftBorderPressed}" />
                            <Setter TargetName="ButtonRightBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource TaskButtonRightBorderPressed}" />
                            <Setter TargetName="ButtonBottomBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource TaskButtonBottomBorderPressed}" />
                            <Setter TargetName="ButtonInnerLeftBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource TaskButtonInnerLeftBorderPressed}" />
                            <Setter TargetName="ButtonInnerRightBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource TaskButtonInnerRightBorderPressed}" />
                            <Setter TargetName="ButtonInnerBottomBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource TaskButtonInnerBottomBorderPressed}" />
                            <Setter TargetName="ButtonInnerBottomBorder"
                                    Property="Background"
                                    Value="Transparent" />
                            <Setter TargetName="ButtonTopBorder"
                                    Property="Background"
                                    Value="{DynamicResource TaskButtonBackgroundPressed}" />
                            <Setter TargetName="ButtonInnerRightBorder"
                                    Property="Background"
                                    Value="{DynamicResource TaskButtonBackgroundHighlightPressed}" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsPressed, RelativeSource={RelativeSource Self}}"
                                           Value="True" />
                                <Condition Binding="{Binding Path=Orientation, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                                           Value="Horizontal" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter TargetName="Content"
                                        Property="Margin"
                                        Value="9,4,7,2" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button"
           x:Key="TaskButtonActive"
           BasedOn="{StaticResource TaskButton}">
        <Setter Property="Foreground"
                Value="{DynamicResource ButtonActiveForeground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="Transparent"
                            Padding="0,3,0,2"
                            Name="ButtonBorder">
                        <Border BorderThickness="0,1,0,0"
                                BorderBrush="{DynamicResource TaskButtonTopBorderPressed}"
                                Background="{DynamicResource TaskButtonBackgroundPressed}"
                                CornerRadius="2"
                                x:Name="ButtonTopBorder">
                            <Border BorderThickness="1,0,0,0"
                                    BorderBrush="{DynamicResource TaskButtonLeftBorderPressed}"
                                    CornerRadius="2"
                                    x:Name="ButtonLeftBorder">
                                <Border BorderThickness="0,0,0,1"
                                        BorderBrush="{DynamicResource TaskButtonBottomBorderPressed}"
                                        CornerRadius="2"
                                        x:Name="ButtonBottomBorder">
                                    <Border BorderThickness="0,0,1,0"
                                            BorderBrush="{DynamicResource TaskButtonRightBorderPressed}"
                                            CornerRadius="2"
                                            x:Name="ButtonRightBorder">
                                        <Border BorderThickness="1,0,0,0"
                                                BorderBrush="{DynamicResource TaskButtonInnerLeftBorderPressed}"
                                                CornerRadius="2"
                                                x:Name="ButtonInnerLeftBorder">
                                            <Border BorderThickness="0,0,1,0"
                                                    BorderBrush="{DynamicResource TaskButtonInnerRightBorderPressed}"
                                                    CornerRadius="2"
                                                    x:Name="ButtonInnerRightBorder">
                                                <Border BorderThickness="0,0,0,1"
                                                        BorderBrush="{DynamicResource TaskButtonInnerBottomBorderPressed}"
                                                        CornerRadius="2"
                                                        x:Name="ButtonInnerBottomBorder">
                                                    <ContentPresenter Margin="9,4,7,2"
                                                                  x:Name="Content" />
                                                </Border>
                                            </Border>
                                        </Border>
                                    </Border>
                                </Border>
                            </Border>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                     Value="Vertical">
                            <DataTrigger.Setters>
                                <Setter TargetName="ButtonBorder"
                                        Property="Padding"
                                        Value="1,0,1,0" />
                                <Setter TargetName="Content"
                                        Property="Margin"
                                        Value="8,6,8,5" />
                            </DataTrigger.Setters>
                        </DataTrigger>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="ButtonTopBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource TaskButtonTopBorderPressedHover}" />
                            <Setter TargetName="ButtonInnerLeftBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource TaskButtonInnerLeftBorderPressedHover}" />
                            <Setter TargetName="ButtonInnerRightBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource TaskButtonInnerRightBorderPressedHover}" />
                            <Setter TargetName="ButtonInnerBottomBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource TaskButtonInnerBottomBorderPressedHover}" />
                            <Setter TargetName="ButtonTopBorder"
                                    Property="Background"
                                    Value="{DynamicResource TaskButtonBackgroundPressedHover}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button"
           x:Key="TaskButtonFlashing"
           BasedOn="{StaticResource TaskButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="Transparent"
                            Padding="0,3,0,2"
                            Name="ButtonBorder">
                        <Border BorderThickness="0,1,0,0"
                                BorderBrush="{DynamicResource TaskButtonTopBorderFlashing}"
                                CornerRadius="2"
                                x:Name="ButtonTopBorder">
                            <Border BorderThickness="1,0,0,0"
                                    BorderBrush="{DynamicResource TaskButtonLeftBorderFlashing}"
                                    CornerRadius="2"
                                    x:Name="ButtonLeftBorder">
                                <Border BorderThickness="0,0,0,1"
                                        BorderBrush="{DynamicResource TaskButtonBottomBorderFlashing}"
                                        CornerRadius="2"
                                        x:Name="ButtonBottomBorder">
                                    <Border BorderThickness="0,0,1,0"
                                            BorderBrush="{DynamicResource TaskButtonRightBorderFlashing}"
                                            CornerRadius="2"
                                            x:Name="ButtonRightBorder">
                                        <Border BorderThickness="1,0,0,0"
                                                BorderBrush="{DynamicResource TaskButtonInnerLeftBorderFlashing}"
                                                Background="{DynamicResource TaskButtonBackgroundFlashing}"
                                                CornerRadius="2"
                                                x:Name="ButtonInnerLeftBorder">
                                            <Border BorderThickness="0,0,1,1"
                                                    BorderBrush="{DynamicResource TaskButtonBottomRightBorderFlashing}"
                                                    Background="{DynamicResource TaskButtonBackgroundHighlightFlashing}"
                                                    CornerRadius="2"
                                                    x:Name="ButtonBottomRightBorder">
                                                <ContentPresenter Margin="8,3"
                                                                  x:Name="Content" />
                                            </Border>
                                        </Border>
                                    </Border>
                                </Border>
                            </Border>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsPressed, RelativeSource={RelativeSource Self}}"
                                           Value="False" />
                                <Condition Binding="{Binding Path=Orientation, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                                           Value="Vertical" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter TargetName="Content"
                                        Property="Margin"
                                        Value="8,6,8,5" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsPressed, RelativeSource={RelativeSource Self}}"
                                           Value="True" />
                                <Condition Binding="{Binding Path=Orientation, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                                           Value="Vertical" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter TargetName="Content"
                                        Property="Margin"
                                        Value="9,7,7,4" />
                                <Setter Property="Foreground"
                                        Value="{DynamicResource ButtonPressedForeground}" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                     Value="Vertical">
                            <DataTrigger.Setters>
                                <Setter TargetName="ButtonBorder"
                                        Property="Padding"
                                        Value="1,0,1,0" />
                            </DataTrigger.Setters>
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsPressed, RelativeSource={RelativeSource Self}}"
                                           Value="True" />
                                <Condition Binding="{Binding Path=Orientation, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                                           Value="Horizontal" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter TargetName="Content"
                                        Property="Margin"
                                        Value="9,4,7,2" />
                                <Setter Property="Foreground"
                                        Value="{DynamicResource ButtonPressedForeground}" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TaskListScrollUpButton"
           TargetType="RepeatButton"
           BasedOn="{StaticResource TaskListScrollButton}">
        <Setter Property="Margin"
                Value="0,1,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border BorderThickness="1,0,0,0"
                            BorderBrush="{DynamicResource TaskListScrollButtonOuterLeftBorder}"
                            CornerRadius="{DynamicResource TaskListScrollUpCornerRadius}"
                            x:Name="ButtonOuterLeftBorder">
                        <Border BorderThickness="0,0,1,0"
                                BorderBrush="{DynamicResource TaskListScrollButtonOuterRightBorder}"
                                CornerRadius="{DynamicResource TaskListScrollUpCornerRadius}"
                                x:Name="ButtonOuterRightBorder">
                            <Border BorderThickness="0,0,0,1"
                                    BorderBrush="{DynamicResource TaskListScrollButtonOuterBottomBorder}"
                                    CornerRadius="{DynamicResource TaskListScrollUpCornerRadius}"
                                    x:Name="ButtonOuterBottomBorder">
                                <Border BorderThickness="0,0,0,1"
                                        BorderBrush="{DynamicResource TaskListScrollButtonBottomBorder}"
                                        CornerRadius="{DynamicResource TaskListScrollUpCornerRadius}"
                                        x:Name="ButtonBottomBorder">
                                    <Border BorderThickness="1,0,0,0"
                                            BorderBrush="{DynamicResource TaskListScrollButtonLeftBorder}"
                                            CornerRadius="{DynamicResource TaskListScrollUpCornerRadius}"
                                            x:Name="ButtonLeftBorder">
                                        <Border BorderThickness="0,0,1,0"
                                                BorderBrush="{DynamicResource TaskListScrollButtonRightBorder}"
                                                CornerRadius="{DynamicResource TaskListScrollUpCornerRadius}"
                                                x:Name="ButtonRightBorder">
                                            <Border BorderThickness="0,1,0,0"
                                                    BorderBrush="{DynamicResource TaskListScrollButtonTopBorder}"
                                                    Background="{DynamicResource TaskListScrollButtonBackground}"
                                                    CornerRadius="{DynamicResource TaskListScrollUpCornerRadius}"
                                                    x:Name="ButtonTopBorder">
                                                <Border BorderThickness="0,0,0,1"
                                                        BorderBrush="{DynamicResource TaskListScrollButtonInnerBottomBorder}"
                                                        CornerRadius="{DynamicResource TaskListScrollUpCornerRadius}"
                                                        x:Name="ButtonInnerBottomBorder">
                                                    <Border BorderThickness="1,0,0,0"
                                                            BorderBrush="{DynamicResource TaskListScrollButtonInnerLeftBorder}"
                                                            CornerRadius="{DynamicResource TaskListScrollUpCornerRadius}"
                                                            x:Name="ButtonInnerLeftBorder">
                                                        <Border BorderThickness="0,0,1,0"
                                                                BorderBrush="{DynamicResource TaskListScrollButtonInnerRightBorder}"
                                                                CornerRadius="{DynamicResource TaskListScrollUpCornerRadius}"
                                                                x:Name="ButtonInnerRightBorder">
                                                            <ContentPresenter HorizontalAlignment="Center"
                                                                              VerticalAlignment="Center"
                                                                              Margin="1,-3,1,-3"
                                                                              x:Name="Content" />
                                                        </Border>
                                                    </Border>
                                                </Border>
                                            </Border>
                                        </Border>
                                    </Border>
                                </Border>
                            </Border>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="ButtonTopBorder"
                                    Property="Background"
                                    Value="{DynamicResource TaskListScrollButtonBackgroundHover}" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="ButtonTopBorder"
                                    Property="Background"
                                    Value="{DynamicResource TaskListScrollButtonBackgroundPressed}" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                     Value="Vertical">
                            <DataTrigger.Setters>
                                <Setter TargetName="ButtonLeftBorder"
                                        Property="BorderThickness"
                                        Value="0,0,0,1" />
                                <Setter TargetName="ButtonTopBorder"
                                        Property="BorderThickness"
                                        Value="1,0,0,0" />
                                <Setter TargetName="ButtonRightBorder"
                                        Property="BorderThickness"
                                        Value="0,1,0,0" />
                                <Setter TargetName="ButtonBottomBorder"
                                        Property="BorderThickness"
                                        Value="0,0,1,0" />
                                <Setter TargetName="ButtonInnerLeftBorder"
                                        Property="BorderThickness"
                                        Value="0,0,0,1" />
                                <Setter TargetName="ButtonInnerRightBorder"
                                        Property="BorderThickness"
                                        Value="0,1,0,0" />
                                <Setter TargetName="ButtonInnerBottomBorder"
                                        Property="BorderThickness"
                                        Value="0,0,1,0" />
                                <Setter TargetName="ButtonOuterLeftBorder"
                                        Property="BorderThickness"
                                        Value="0,0,0,1" />
                                <Setter TargetName="ButtonOuterRightBorder"
                                        Property="BorderThickness"
                                        Value="0,1,0,0" />
                                <Setter TargetName="ButtonOuterBottomBorder"
                                        Property="BorderThickness"
                                        Value="0,0,1,0" />
                                <Setter TargetName="ButtonLeftBorder"
                                        Property="CornerRadius"
                                        Value="{DynamicResource TaskListScrollLeftCornerRadius}" />
                                <Setter TargetName="ButtonTopBorder"
                                        Property="CornerRadius"
                                        Value="{DynamicResource TaskListScrollLeftCornerRadius}" />
                                <Setter TargetName="ButtonRightBorder"
                                        Property="CornerRadius"
                                        Value="{DynamicResource TaskListScrollLeftCornerRadius}" />
                                <Setter TargetName="ButtonBottomBorder"
                                        Property="CornerRadius"
                                        Value="{DynamicResource TaskListScrollLeftCornerRadius}" />
                                <Setter TargetName="ButtonInnerLeftBorder"
                                        Property="CornerRadius"
                                        Value="{DynamicResource TaskListScrollLeftCornerRadius}" />
                                <Setter TargetName="ButtonInnerRightBorder"
                                        Property="CornerRadius"
                                        Value="{DynamicResource TaskListScrollLeftCornerRadius}" />
                                <Setter TargetName="ButtonInnerBottomBorder"
                                        Property="CornerRadius"
                                        Value="{DynamicResource TaskListScrollLeftCornerRadius}" />
                                <Setter TargetName="ButtonOuterLeftBorder"
                                        Property="CornerRadius"
                                        Value="{DynamicResource TaskListScrollLeftCornerRadius}" />
                                <Setter TargetName="ButtonOuterRightBorder"
                                        Property="CornerRadius"
                                        Value="{DynamicResource TaskListScrollLeftCornerRadius}" />
                                <Setter TargetName="ButtonOuterBottomBorder"
                                        Property="CornerRadius"
                                        Value="{DynamicResource TaskListScrollLeftCornerRadius}" />
                            </DataTrigger.Setters>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                         Value="Vertical">
                <DataTrigger.Setters>
                    <Setter Property="Margin"
                            Value="0" />
                </DataTrigger.Setters>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TaskListScrollDownButton"
           TargetType="RepeatButton"
           BasedOn="{StaticResource TaskListScrollButton}">
        <Setter Property="Margin"
                Value="0,-1,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border BorderThickness="1,0,0,0"
                            BorderBrush="{DynamicResource TaskListScrollButtonOuterLeftBorder}"
                            CornerRadius="{DynamicResource TaskListScrollDownCornerRadius}"
                            x:Name="ButtonOuterLeftBorder">
                        <Border BorderThickness="0,0,1,0"
                                BorderBrush="{DynamicResource TaskListScrollButtonOuterRightBorder}"
                                CornerRadius="{DynamicResource TaskListScrollDownCornerRadius}"
                                x:Name="ButtonOuterRightBorder">
                            <Border BorderThickness="0,1,0,0"
                                    BorderBrush="{DynamicResource TaskListScrollDownButtonOuterTopBorder}"
                                    CornerRadius="{DynamicResource TaskListScrollDownCornerRadius}"
                                    x:Name="ButtonOuterTopBorder">
                                <Border BorderThickness="0,0,0,1"
                                        BorderBrush="{DynamicResource TaskListScrollDownButtonBottomBorder}"
                                        CornerRadius="{DynamicResource TaskListScrollDownCornerRadius}"
                                        x:Name="ButtonBottomBorder">
                                    <Border BorderThickness="1,0,0,0"
                                            BorderBrush="{DynamicResource TaskListScrollButtonLeftBorder}"
                                            CornerRadius="{DynamicResource TaskListScrollDownCornerRadius}"
                                            x:Name="ButtonLeftBorder">
                                        <Border BorderThickness="0,0,1,0"
                                                BorderBrush="{DynamicResource TaskListScrollButtonRightBorder}"
                                                CornerRadius="{DynamicResource TaskListScrollDownCornerRadius}"
                                                x:Name="ButtonRightBorder">
                                            <Border BorderThickness="0,1,0,0"
                                                    BorderBrush="{DynamicResource TaskListScrollDownButtonTopBorder}"
                                                    CornerRadius="{DynamicResource TaskListScrollDownCornerRadius}"
                                                    x:Name="ButtonTopBorder">
                                                <Border BorderThickness="0,0,0,1"
                                                        BorderBrush="{DynamicResource TaskListScrollDownButtonInnerBottomBorder}"
                                                        Background="{DynamicResource TaskListScrollButtonBackground}"
                                                        CornerRadius="{DynamicResource TaskListScrollDownCornerRadius}"
                                                        x:Name="ButtonInnerBottomBorder">
                                                    <Border BorderThickness="1,0,0,0"
                                                            BorderBrush="{DynamicResource TaskListScrollButtonInnerLeftBorder}"
                                                            CornerRadius="{DynamicResource TaskListScrollDownCornerRadius}"
                                                            x:Name="ButtonInnerLeftBorder">
                                                        <Border BorderThickness="0,0,1,0"
                                                                BorderBrush="{DynamicResource TaskListScrollButtonInnerRightBorder}"
                                                                CornerRadius="{DynamicResource TaskListScrollDownCornerRadius}"
                                                                x:Name="ButtonInnerRightBorder">
                                                            <Border BorderThickness="0,1,0,0"
                                                                    BorderBrush="{DynamicResource TaskListScrollDownButtonInnerTopBorder}"
                                                                    CornerRadius="{DynamicResource TaskListScrollDownCornerRadius}"
                                                                    x:Name="ButtonInnerTopBorder">
                                                                <ContentPresenter HorizontalAlignment="Center"
                                                                              VerticalAlignment="Center"
                                                                              Margin="1,-4,1,-3"
                                                                              x:Name="Content" />
                                                            </Border>
                                                        </Border>
                                                    </Border>
                                                </Border>
                                            </Border>
                                        </Border>
                                    </Border>
                                </Border>
                            </Border>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="ButtonInnerBottomBorder"
                                    Property="Background"
                                    Value="{DynamicResource TaskListScrollButtonBackgroundHover}" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="ButtonInnerBottomBorder"
                                    Property="Background"
                                    Value="{DynamicResource TaskListScrollButtonBackgroundPressed}" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                     Value="Vertical">
                            <DataTrigger.Setters>
                                <Setter TargetName="Content"
                                        Property="Margin"
                                        Value="1,-3,1,-3" />
                                <Setter TargetName="ButtonLeftBorder"
                                        Property="BorderThickness"
                                        Value="0,0,0,1" />
                                <Setter TargetName="ButtonTopBorder"
                                        Property="BorderThickness"
                                        Value="1,0,0,0" />
                                <Setter TargetName="ButtonRightBorder"
                                        Property="BorderThickness"
                                        Value="0,1,0,0" />
                                <Setter TargetName="ButtonBottomBorder"
                                        Property="BorderThickness"
                                        Value="0,0,1,0" />
                                <Setter TargetName="ButtonInnerLeftBorder"
                                        Property="BorderThickness"
                                        Value="0,0,0,1" />
                                <Setter TargetName="ButtonInnerRightBorder"
                                        Property="BorderThickness"
                                        Value="0,1,0,0" />
                                <Setter TargetName="ButtonInnerBottomBorder"
                                        Property="BorderThickness"
                                        Value="0,0,1,0" />
                                <Setter TargetName="ButtonInnerTopBorder"
                                        Property="BorderThickness"
                                        Value="1,0,0,0" />
                                <Setter TargetName="ButtonOuterLeftBorder"
                                        Property="BorderThickness"
                                        Value="0,0,0,1" />
                                <Setter TargetName="ButtonOuterRightBorder"
                                        Property="BorderThickness"
                                        Value="0,1,0,0" />
                                <Setter TargetName="ButtonOuterTopBorder"
                                        Property="BorderThickness"
                                        Value="1,0,0,0" />
                                <Setter TargetName="ButtonLeftBorder"
                                        Property="CornerRadius"
                                        Value="{DynamicResource TaskListScrollRightCornerRadius}" />
                                <Setter TargetName="ButtonTopBorder"
                                        Property="CornerRadius"
                                        Value="{DynamicResource TaskListScrollRightCornerRadius}" />
                                <Setter TargetName="ButtonRightBorder"
                                        Property="CornerRadius"
                                        Value="{DynamicResource TaskListScrollRightCornerRadius}" />
                                <Setter TargetName="ButtonBottomBorder"
                                        Property="CornerRadius"
                                        Value="{DynamicResource TaskListScrollRightCornerRadius}" />
                                <Setter TargetName="ButtonInnerLeftBorder"
                                        Property="CornerRadius"
                                        Value="{DynamicResource TaskListScrollRightCornerRadius}" />
                                <Setter TargetName="ButtonInnerRightBorder"
                                        Property="CornerRadius"
                                        Value="{DynamicResource TaskListScrollRightCornerRadius}" />
                                <Setter TargetName="ButtonInnerBottomBorder"
                                        Property="CornerRadius"
                                        Value="{DynamicResource TaskListScrollRightCornerRadius}" />
                                <Setter TargetName="ButtonInnerTopBorder"
                                        Property="CornerRadius"
                                        Value="{DynamicResource TaskListScrollRightCornerRadius}" />
                                <Setter TargetName="ButtonOuterLeftBorder"
                                        Property="CornerRadius"
                                        Value="{DynamicResource TaskListScrollRightCornerRadius}" />
                                <Setter TargetName="ButtonOuterRightBorder"
                                        Property="CornerRadius"
                                        Value="{DynamicResource TaskListScrollRightCornerRadius}" />
                                <Setter TargetName="ButtonOuterTopBorder"
                                        Property="CornerRadius"
                                        Value="{DynamicResource TaskListScrollRightCornerRadius}" />
                            </DataTrigger.Setters>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                         Value="Vertical">
                <DataTrigger.Setters>
                    <Setter Property="Margin"
                            Value="0" />
                </DataTrigger.Setters>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <ToolTip x:Key="StartButtonTip" Content="{DynamicResource start_button_tip}" />

    <Style TargetType="ToggleButton"
           x:Key="StartButton">
        <Setter Property="OverridesDefaultStyle"
                Value="True" />
        <Setter Property="Foreground"
                Value="{DynamicResource ItemButtonForeground}" />
        <Setter Property="Margin"
                Value="0,0,5,-3" />
        <Setter Property="MinWidth"
                Value="99" />
        <Setter Property="Height"
                Value="32" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border x:Name="StartButtonBorder">
                        <Border.Background>
                            <ImageBrush ImageSource="{DynamicResource StartButtonImage}"
                                        ViewboxUnits="RelativeToBoundingBox"
                                        Viewbox="0,0,1,0.3333" />
                        </Border.Background>
                        <ContentPresenter Margin="0,-3,0,0" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="StartButtonBorder"
                                    Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{DynamicResource StartButtonImage}"
                                                ViewboxUnits="RelativeToBoundingBox"
                                                Viewbox="0,0.3333,1,0.3333" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsChecked"
                                 Value="True">
                            <Setter TargetName="StartButtonBorder"
                                    Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{DynamicResource StartButtonImage}"
                                                ViewboxUnits="RelativeToBoundingBox"
                                                Viewbox="0,0.6666,1,0.3333" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="StartButtonBorder"
                                    Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{DynamicResource StartButtonImage}"
                                                ViewboxUnits="RelativeToBoundingBox"
                                                Viewbox="0,0.6666,1,0.3333" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                         Value="Vertical">
                <DataTrigger.Setters>
                    <Setter Property="Margin"
                            Value="0" />
                </DataTrigger.Setters>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Image"
           x:Key="TaskIcon"
           BasedOn="{StaticResource TaskIcon}">
        <Setter Property="Margin"
                Value="0,0,4,0" />
    </Style>

    <Style TargetType="Image"
           x:Key="StartIcon"
           BasedOn="{StaticResource StartIcon}">
        <Setter Property="Margin"
                Value="10,0,0,0" />
        <Setter Property="Width"
                Value="25" />
        <Setter Property="Height"
                Value="20" />
    </Style>

    <Style TargetType="TextBlock"
           x:Key="StartLabel"
           BasedOn="{StaticResource StartLabel}">
        <Setter Property="Text"
                Value="{DynamicResource start_text_xp}" />
        <Setter Property="FontFamily"
                Value="{DynamicResource start_text_xp_font_family}" />
        <Setter Property="FontSize"
                Value="19" />
        <Setter Property="FontStyle"
                Value="Italic" />
        <Setter Property="FontWeight"
                Value="Normal" />
        <Setter Property="Margin"
                Value="0,0,26,0" />
        <Setter Property="Effect"
                Value="{DynamicResource StartLabelShadow}" />
    </Style>

    <Style TargetType="TextBlock"
           x:Key="Clock"
           BasedOn="{StaticResource Clock}">
        <Setter Property="Margin"
                Value="14,0" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                         Value="Vertical">
                <DataTrigger.Setters>
                    <Setter Property="Margin"
                            Value="0,3,0,9" />
                </DataTrigger.Setters>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Image"
           x:Key="NotifyIcon"
           BasedOn="{StaticResource NotifyIcon}">
        <Setter Property="Margin"
                Value="0,2,4,2" />
    </Style>

    <Style TargetType="ItemsControl"
           x:Key="ToolbarItems"
           BasedOn="{StaticResource ToolbarItems}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                         Value="Vertical">
                <DataTrigger.Setters>
                    <Setter Property="Margin"
                            Value="0,3" />
                </DataTrigger.Setters>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button"
           x:Key="ToolbarButton"
           BasedOn="{StaticResource ToolbarButton}">
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="Transparent">
                        <Border BorderThickness="0,1,0,0"
                                BorderBrush="Transparent"
                                Background="Transparent"
                                CornerRadius="2"
                                Margin="0,3,0,2"
                                x:Name="ButtonTopBorder">
                            <Border BorderThickness="1,0,0,0"
                                    BorderBrush="Transparent"
                                    CornerRadius="2"
                                    x:Name="ButtonLeftBorder">
                                <Border BorderThickness="0,0,0,1"
                                        BorderBrush="Transparent"
                                        CornerRadius="2"
                                        x:Name="ButtonRightBorder">
                                    <Border BorderThickness="0,0,1,0"
                                            BorderBrush="Transparent"
                                            CornerRadius="2"
                                            x:Name="ButtonBottomBorder">
                                        <Border BorderThickness="0,0,0,1"
                                                BorderBrush="Transparent"
                                                Background="Transparent"
                                                CornerRadius="2"
                                                x:Name="ButtonInnerBottomBorder">
                                            <Border BorderThickness="1,0,0,0"
                                                    BorderBrush="Transparent"
                                                    Background="Transparent"
                                                    CornerRadius="2"
                                                    x:Name="ButtonInnerLeftBorder">
                                                <Border BorderThickness="0,0,1,0"
                                                        BorderBrush="Transparent"
                                                        Background="Transparent"
                                                        CornerRadius="2"
                                                        x:Name="ButtonInnerRightBorder">
                                                    <ContentPresenter Margin="2,3"
                                                                  x:Name="Content" />
                                                </Border>
                                            </Border>
                                        </Border>
                                    </Border>
                                </Border>
                            </Border>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                     Value="Vertical">
                            <DataTrigger.Setters>
                                <Setter TargetName="ButtonTopBorder"
                                        Property="Margin"
                                        Value="0" />
                            </DataTrigger.Setters>
                        </DataTrigger>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="ButtonTopBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource TaskButtonTopBorder}" />
                            <Setter TargetName="ButtonLeftBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource TaskButtonLeftBorder}" />
                            <Setter TargetName="ButtonRightBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource TaskButtonRightBorder}" />
                            <Setter TargetName="ButtonBottomBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource TaskButtonBottomBorder}" />
                            <Setter TargetName="ButtonInnerLeftBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource TaskButtonInnerLeftBorder}" />
                            <Setter TargetName="ButtonInnerRightBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource TaskButtonInnerRightBorder}" />
                            <Setter TargetName="ButtonInnerBottomBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource TaskButtonInnerBottomBorder}" />
                            <Setter TargetName="ButtonInnerBottomBorder"
                                    Property="Background"
                                    Value="{DynamicResource TaskButtonBackground}" />
                            <Setter TargetName="ButtonInnerRightBorder"
                                    Property="Background"
                                    Value="{DynamicResource TaskButtonBackgroundHighlight}" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="ButtonTopBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource TaskButtonTopBorderPressed}" />
                            <Setter TargetName="ButtonLeftBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource TaskButtonLeftBorderPressed}" />
                            <Setter TargetName="ButtonRightBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource TaskButtonRightBorderPressed}" />
                            <Setter TargetName="ButtonBottomBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource TaskButtonBottomBorderPressed}" />
                            <Setter TargetName="ButtonInnerLeftBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource TaskButtonInnerLeftBorderPressed}" />
                            <Setter TargetName="ButtonInnerRightBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource TaskButtonInnerRightBorderPressed}" />
                            <Setter TargetName="ButtonInnerBottomBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource TaskButtonInnerBottomBorderPressed}" />
                            <Setter TargetName="ButtonInnerBottomBorder"
                                    Property="Background"
                                    Value="Transparent" />
                            <Setter TargetName="ButtonTopBorder"
                                    Property="Background"
                                    Value="{DynamicResource TaskButtonBackgroundPressed}" />
                            <Setter TargetName="ButtonInnerRightBorder"
                                    Property="Background"
                                    Value="{DynamicResource TaskButtonBackgroundHighlightPressed}" />
                            <Setter TargetName="Content"
                                    Property="Margin"
                                    Value="3,3,1,3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TaskListScrollButtonGrid"
           TargetType="Grid">
        <Setter Property="Margin"
                Value="1,0" />
    </Style>

    <Style x:Key="TaskListScrollViewer"
           TargetType="ScrollViewer"
           BasedOn="{StaticResource TaskListScrollViewer}">
        <Setter Property="Margin"
                Value="0,0,10,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <ScrollContentPresenter Grid.Column="0"
                                                Width="{TemplateBinding Width}"
                                                Height="{TemplateBinding Height}"
                                                CanContentScroll="{TemplateBinding CanContentScroll}"
                                                Content="{TemplateBinding Content}" />
                        <Grid Grid.Column="1"
                              Style="{DynamicResource TaskListScrollButtonGrid}"
                              Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <RepeatButton Command="ScrollBar.PageUpCommand"
                                          Style="{DynamicResource TaskListScrollUpButton}"
                                          Grid.Column="0">
                                <Path Fill="{DynamicResource TaskListScrollArrow}"
                                      Data="{DynamicResource VArrow}"
                                      RenderTransformOrigin="0.5,0.5"
                                      RenderOptions.EdgeMode="Aliased">
                                    <Path.RenderTransform>
                                        <ScaleTransform ScaleY="-1" />
                                    </Path.RenderTransform>
                                </Path>
                            </RepeatButton>
                            <RepeatButton Command="ScrollBar.PageDownCommand"
                                          Style="{DynamicResource TaskListScrollDownButton}"
                                          Grid.Row="1">
                                <Path Fill="{DynamicResource TaskListScrollArrow}"
                                      Data="{DynamicResource VArrow}"
                                      RenderOptions.EdgeMode="Aliased">
                                </Path>
                            </RepeatButton>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                         Value="Vertical">
                <DataTrigger.Setters>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <ScrollContentPresenter Grid.Row="0"
                                                            Width="{TemplateBinding Width}"
                                                            Height="{TemplateBinding Height}"
                                                            CanContentScroll="{TemplateBinding CanContentScroll}"
                                                            Content="{TemplateBinding Content}" />
                                    <Grid Grid.Row="1"
                                          Style="{DynamicResource TaskListScrollButtonGrid}"
                                          Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <RepeatButton Command="ScrollBar.PageUpCommand"
                                                      Style="{DynamicResource TaskListScrollUpButton}"
                                                      Padding="7"
                                                      Grid.Column="0">
                                            <Path Fill="{DynamicResource TaskListScrollArrow}"
                                                  Data="{DynamicResource VArrow}"
                                                  Margin="7"
                                                  RenderTransformOrigin="0.5,0.5"
                                                  RenderOptions.EdgeMode="Aliased">
                                                <Path.RenderTransform>
                                                    <ScaleTransform ScaleY="-1" />
                                                </Path.RenderTransform>
                                            </Path>
                                        </RepeatButton>
                                        <RepeatButton Command="ScrollBar.PageDownCommand"
                                                      Style="{DynamicResource TaskListScrollDownButton}"
                                                      Padding="4"
                                                      Grid.Column="1">
                                            <Path Fill="{DynamicResource TaskListScrollArrow}"
                                                  Data="{DynamicResource VArrow}"
                                                  Margin="7"
                                                  RenderOptions.EdgeMode="Aliased">
                                            </Path>
                                        </RepeatButton>
                                    </Grid>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Margin"
                            Value="0,0,0,10" />
                </DataTrigger.Setters>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Geometry x:Key="VArrow">M 4.5 6 L 9 1.5 L 8 0 L 4.5 3 L 1 0 L 0 1.5 Z</Geometry>
    <Geometry x:Key="HArrow">M 0,4.5 L 4.5,9 L 6,8 L 3,4.5 L 6,1 L 4.5,0 Z</Geometry>

    <Style TargetType="ToggleButton"
           x:Key="TrayToggleButton">
        <Setter Property="OverridesDefaultStyle"
                Value="True" />
        <Setter Property="Background"
                Value="{DynamicResource TrayToggleBackground}" />
        <Setter Property="Margin"
                Value="-20,1,3,0" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border Background="Transparent">
                        <Border BorderThickness="1"
                                BorderBrush="{DynamicResource TrayToggleBorder}"
                                CornerRadius="10"
                                Background="{TemplateBinding Background}"
                                Padding="{DynamicResource TrayToggleArrowPadding}"
                                HorizontalAlignment="Center"
                                x:Name="ButtonBorder">
                            <Border Effect="{DynamicResource TrayToggleArrowOuterShadow}">
                                <Path Fill="{DynamicResource ItemButtonForeground}"
                                      Data="{DynamicResource HArrow}"
                                      RenderOptions.EdgeMode="Aliased"
                                      Effect="{DynamicResource TrayToggleArrowShadow}"
                                      x:Name="ToggleArrow" />
                            </Border>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="ButtonBorder"
                                    Property="Background"
                                    Value="{DynamicResource TrayToggleHoverBackground}" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="ButtonBorder"
                                    Property="Background"
                                    Value="{DynamicResource TrayTogglePressedBackground}" />
                            <Setter TargetName="ToggleArrow"
                                    Property="Fill"
                                    Value="{DynamicResource TrayToggleArrowPressed}" />
                        </Trigger>
                        <Trigger Property="IsChecked"
                                 Value="True">
                            <Setter TargetName="ToggleArrow"
                                    Property="RenderTransformOrigin"
                                    Value="0.6,0.5" />
                            <Setter TargetName="ToggleArrow"
                                    Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="-1"></ScaleTransform>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="ToolTip" Value="{DynamicResource hide}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="False">
                <Setter Property="ToolTip" Value="{DynamicResource show_hidden}" />
            </Trigger>
            <DataTrigger Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                         Value="Vertical">
                <DataTrigger.Setters>
                    <Setter Property="Margin"
                            Value="0,-19,0,1" />
                </DataTrigger.Setters>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button"
           x:Key="NotifyBalloonCloseButton"
           BasedOn="{StaticResource NotifyBalloonCloseButton}">
        <Setter Property="Foreground"
                Value="{DynamicResource BalloonCloseButtonInactiveForeground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border BorderBrush="{DynamicResource BalloonCloseButtonInactiveShadow}"
                            BorderThickness="0,0,1,1"
                            CornerRadius="3"
                            Name="BorderShadowDark">
                        <Border BorderBrush="{DynamicResource BalloonCloseButtonInactiveShadow}"
                                BorderThickness="1,1,0,0"
                                CornerRadius="3"
                                Name="BorderShadowLight">
                            <Border BorderBrush="{DynamicResource BalloonCloseButtonInactiveBorder}"
                                    BorderThickness="1"
                                    CornerRadius="2"
                                    Background="{DynamicResource BalloonCloseButtonInactiveBackground}"
                                    Name="Border">
                                <Border BorderBrush="{DynamicResource BalloonCloseButtonInactiveShadow}"
                                        BorderThickness="0,0,1,1"
                                        CornerRadius="2"
                                        Name="BorderInnerDark">
                                    <Border BorderBrush="{DynamicResource BalloonCloseButtonInactiveShadow}"
                                            BorderThickness="1"
                                            CornerRadius="2"
                                            Padding="3,3,0,0"
                                            Name="BorderInnerLight">
                                        <Grid x:Name="Content">
                                            <Path Stroke="{TemplateBinding Foreground}"
                                                  StrokeEndLineCap="Round"
                                                  StrokeStartLineCap="Round"
                                                  Width="8"
                                                  Height="8"
                                                  StrokeThickness="2"
                                                  Data="M 0,0 l 6,6" />
                                            <Path Stroke="{TemplateBinding Foreground}"
                                                  StrokeEndLineCap="Round"
                                                  StrokeStartLineCap="Round"
                                                  Width="8"
                                                  Height="8"
                                                  StrokeThickness="2"
                                                  Data="M 0,6 l 6,-6" />
                                        </Grid>
                                    </Border>
                                </Border>
                            </Border>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="BorderShadowDark"
                                    Property="BorderBrush"
                                    Value="{DynamicResource BalloonCloseButtonActiveShadowDark}" />
                            <Setter TargetName="BorderShadowLight"
                                    Property="BorderBrush"
                                    Value="{DynamicResource BalloonCloseButtonActiveShadowLight}" />
                            <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="{DynamicResource BalloonCloseButtonActiveBorder}" />
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="{DynamicResource BalloonCloseButtonHoverBackground}" />
                            <Setter TargetName="BorderInnerDark"
                                    Property="BorderBrush"
                                    Value="{DynamicResource BalloonCloseButtonHoverInnerDark}" />
                            <Setter TargetName="BorderInnerLight"
                                    Property="BorderBrush"
                                    Value="{DynamicResource BalloonCloseButtonHoverInnerLight}" />
                            <Setter Property="Foreground"
                                    Value="{DynamicResource BalloonCloseButtonActiveForeground}" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="BorderShadowDark"
                                    Property="BorderBrush"
                                    Value="{DynamicResource BalloonCloseButtonActiveShadowDark}" />
                            <Setter TargetName="BorderShadowLight"
                                    Property="BorderBrush"
                                    Value="{DynamicResource BalloonCloseButtonActiveShadowLight}" />
                            <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="{DynamicResource BalloonCloseButtonActiveBorder}" />
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="{DynamicResource BalloonCloseButtonPressedBackground}" />
                            <Setter TargetName="BorderInnerDark"
                                    Property="BorderBrush"
                                    Value="{DynamicResource BalloonCloseButtonPressedInnerDark}" />
                            <Setter TargetName="BorderInnerLight"
                                    Property="BorderBrush"
                                    Value="{DynamicResource BalloonCloseButtonPressedInnerLight}" />
                            <Setter TargetName="BorderInnerDark"
                                    Property="BorderThickness"
                                    Value="1,1,0,0" />
                            <Setter Property="Foreground"
                                    Value="{DynamicResource BalloonCloseButtonActiveForeground}" />
                            <Setter TargetName="Content"
                                    Property="Opacity"
                                    Value="0.5" />
                            <Setter TargetName="Content"
                                    Property="Margin"
                                    Value="-1,-1,0,0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>